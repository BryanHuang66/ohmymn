import os from "os"
import path from "path"
import commonjs from "@rollup/plugin-commonjs"
import json from "@rollup/plugin-json"
import { nodeResolve } from "@rollup/plugin-node-resolve"
import strip from "@rollup/plugin-strip"
import typescript from "rollup-plugin-typescript2"
import { minify } from "rollup-plugin-esbuild"
import { defineConfig } from "rollup"
import banner from "rollup-plugin-banner"
import copy from "rollup-plugin-copy"
import mnaddon from "./mnaddon.json"

// 判断是否为开发环境
const isProd = process.env.NODE_ENV === "production"

const bannerText = `THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source code, please visit the github repository
https://github.com/mnaddon/ohmymn
version: ${mnaddon.version} by ${mnaddon.author}`

const dir = isProd
  ? "./dist"
  : os.homedir() +
    `/Library/Containers/QReader.MarginStudyMac/Data/Library/MarginNote Extensions/${mnaddon.addonid}`

const onwarn = (warning, rollupWarn) => {
  const ignoredWarnings = [
    {
      ignoredCode: "CIRCULAR_DEPENDENCY",
      ignoredPath: "src/synthesizer.ts"
    }
  ]
  if (
    !ignoredWarnings.some(
      ({ ignoredCode, ignoredPath }) =>
        warning.code === ignoredCode &&
        warning.importer.includes(path.normalize(ignoredPath))
    )
  ) {
    rollupWarn(warning)
  }
}

export default defineConfig({
  onwarn,
  input: ["src/main.ts"],
  output: {
    dir,
    format: "iife",
    exports: "none",
    sourcemap: false
  },
  watch: {
    exclude: "../node_modules/**"
  },
  plugins: [
    typescript(),
    nodeResolve({ browser: true }),
    commonjs(),
    json(),
    isProd &&
      strip({
        include: ["**/*.ts"],
        functions: ["log"]
      }),
    isProd && minify(),
    isProd && banner(bannerText),
    copy({
      targets: [
        {
          src: ["assets/logo.png", "mnaddon.json", "assets/icon"],
          dest: dir
        }
      ]
    })
  ]
})
